{
	"info": {
		"name": "col2",
		"_postman_id": "2498c114-5f98-3ea0-381c-92e7a8b199c7",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "test_example",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"function deepCompare() {",
							"    var i, l, leftChain, rightChain;",
							"",
							"    function isArray(what) {",
							"        return Object.prototype.toString.call(what) === '[object Array]';",
							"    }",
							"",
							"    Array.prototype.equals = function(array) {",
							"        if (!array)",
							"            return false;",
							"",
							"        if (this.length != array.length)",
							"            return false;",
							"",
							"        var a = this.sort();",
							"        var b = array.sort();",
							"",
							"        for (var i = 0, l = a.length; i < l; i++) {",
							"            if (a[i] instanceof Array && b[i] instanceof Array) {",
							"                if (!a[i].equals(b[i]))",
							"                    return false;",
							"            } else if (!deepCompare(a[i], b[i])) {",
							"                return false;",
							"            }",
							"        }",
							"        return true;",
							"    }",
							"",
							"    function compare2Objects(x, y) {",
							"        var p;",
							"",
							"        if (isNaN(x) && isNaN(y) && typeof x === 'number' && typeof y === 'number') {",
							"            return true;",
							"        }",
							"",
							"        if (x === y) {",
							"            return true;",
							"        }",
							"",
							"        if ((typeof x === 'function' && typeof y === 'function') ||",
							"            (x instanceof Date && y instanceof Date) ||",
							"            (x instanceof RegExp && y instanceof RegExp) ||",
							"            (x instanceof String && y instanceof String) ||",
							"            (x instanceof Number && y instanceof Number)) {",
							"            return x.toString() === y.toString();",
							"        }",
							"",
							"        if (!(x instanceof Object && y instanceof Object) ||",
							"            (x.isPrototypeOf(y) || y.isPrototypeOf(x)) ||",
							"            (x.constructor !== y.constructor) ||",
							"            (x.prototype !== y.prototype)) {",
							"            return false;",
							"        }",
							"",
							"        if (isArray(x) && isArray(y)) {",
							"            return x.equals(y);",
							"        }",
							"",
							"        if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) {",
							"            return false;",
							"        }",
							"",
							"        for (p in y) {",
							"            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {",
							"                return false;",
							"            } else if (typeof y[p] !== typeof x[p]) {",
							"                return false;",
							"            }",
							"        }",
							"",
							"        for (p in x) {",
							"            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {",
							"                return false;",
							"            } else if (typeof y[p] !== typeof x[p]) {",
							"                return false;",
							"            }",
							"",
							"            switch (typeof(x[p])) {",
							"                case 'object':",
							"                case 'function':",
							"",
							"                    leftChain.push(x);",
							"                    rightChain.push(y);",
							"",
							"                    if (!compare2Objects(x[p], y[p])) {",
							"                        return false;",
							"                    }",
							"",
							"                    leftChain.pop();",
							"                    rightChain.pop();",
							"                    break;",
							"",
							"                default:",
							"                    if (x[p] !== y[p]) {",
							"                        return false;",
							"                    }",
							"                    break;",
							"            }",
							"        }",
							"",
							"        return true;",
							"    }",
							"",
							"    if (arguments.length < 1) {",
							"        return true;",
							"    }",
							"",
							"    for (i = 1, l = arguments.length; i < l; i++) {",
							"",
							"        leftChain = [];",
							"        rightChain = [];",
							"",
							"        if (!compare2Objects(arguments[0], arguments[i])) {",
							"            return false;",
							"        }",
							"    }",
							"",
							"    return true;",
							"}",
							"",
							"var expected = JSON.parse(postman.getGlobalVariable(\"expected_response\"));",
							"var got = JSON.parse(responseBody);",
							"tests[\"Response correct\"] = deepCompare(expected, got);",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"postman.setGlobalVariable(\"expected_response\", \"{   \\\"id\\\": \\\"1235432152\\\",   \\\"imp\\\": [     {       \\\"id\\\": \\\"33\\\",       \\\"adm\\\": \\\"<a href=\\\\\\\"http://my.mobfox.com/rtb.click.php?rid=43b43b1afdde970da033d1898731ed3b&price=${AUCTION_PRICE}\\\\\\\" target=\\\\\\\"_self\\\\\\\"><img src=\\\\\\\"http://creative2cdn.mobfox.com/a09b229bcc7395f24e1808aa3958e540.gif\\\\\\\" border=\\\\\\\"0\\\\\\\"/></a><img style=\\\\\\\"position:absolute; left: -10000px;\\\\\\\" width=\\\\\\\"1\\\\\\\" height=\\\\\\\"1\\\\\\\" src=\\\\\\\"http://my.mobfox.com/rtb.impression.pixel.php?rid=43b43b1afdde970da033d1898731ed3b&price=${AUCTION_PRICE}\\\\\\\"/>\\\",       \\\"type\\\": 1     }   ] }\");"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"1235432152\",\n    \"imp\": [\n        {\n            \"id\": \"33\",\n            \"banner\": {}\n        }\n    ],\n    \"site\": {\n        \"id\": 1\n    }\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test_example1",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"function deepCompare() {",
							"    var i, l, leftChain, rightChain;",
							"",
							"    function isArray(what) {",
							"        return Object.prototype.toString.call(what) === '[object Array]';",
							"    }",
							"",
							"    Array.prototype.equals = function(array) {",
							"        if (!array)",
							"            return false;",
							"",
							"        if (this.length != array.length)",
							"            return false;",
							"",
							"        var a = this.sort();",
							"        var b = array.sort();",
							"",
							"        for (var i = 0, l = a.length; i < l; i++) {",
							"            if (a[i] instanceof Array && b[i] instanceof Array) {",
							"                if (!a[i].equals(b[i]))",
							"                    return false;",
							"            } else if (!deepCompare(a[i], b[i])) {",
							"                return false;",
							"            }",
							"        }",
							"        return true;",
							"    }",
							"",
							"    function compare2Objects(x, y) {",
							"        var p;",
							"",
							"        if (isNaN(x) && isNaN(y) && typeof x === 'number' && typeof y === 'number') {",
							"            return true;",
							"        }",
							"",
							"        if (x === y) {",
							"            return true;",
							"        }",
							"",
							"        if ((typeof x === 'function' && typeof y === 'function') ||",
							"            (x instanceof Date && y instanceof Date) ||",
							"            (x instanceof RegExp && y instanceof RegExp) ||",
							"            (x instanceof String && y instanceof String) ||",
							"            (x instanceof Number && y instanceof Number)) {",
							"            return x.toString() === y.toString();",
							"        }",
							"",
							"        if (!(x instanceof Object && y instanceof Object) ||",
							"            (x.isPrototypeOf(y) || y.isPrototypeOf(x)) ||",
							"            (x.constructor !== y.constructor) ||",
							"            (x.prototype !== y.prototype)) {",
							"            return false;",
							"        }",
							"",
							"        if (isArray(x) && isArray(y)) {",
							"            return x.equals(y);",
							"        }",
							"",
							"        if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) {",
							"            return false;",
							"        }",
							"",
							"        for (p in y) {",
							"            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {",
							"                return false;",
							"            } else if (typeof y[p] !== typeof x[p]) {",
							"                return false;",
							"            }",
							"        }",
							"",
							"        for (p in x) {",
							"            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {",
							"                return false;",
							"            } else if (typeof y[p] !== typeof x[p]) {",
							"                return false;",
							"            }",
							"",
							"            switch (typeof(x[p])) {",
							"                case 'object':",
							"                case 'function':",
							"",
							"                    leftChain.push(x);",
							"                    rightChain.push(y);",
							"",
							"                    if (!compare2Objects(x[p], y[p])) {",
							"                        return false;",
							"                    }",
							"",
							"                    leftChain.pop();",
							"                    rightChain.pop();",
							"                    break;",
							"",
							"                default:",
							"                    if (x[p] !== y[p]) {",
							"                        return false;",
							"                    }",
							"                    break;",
							"            }",
							"        }",
							"",
							"        return true;",
							"    }",
							"",
							"    if (arguments.length < 1) {",
							"        return true;",
							"    }",
							"",
							"    for (i = 1, l = arguments.length; i < l; i++) {",
							"",
							"        leftChain = [];",
							"        rightChain = [];",
							"",
							"        if (!compare2Objects(arguments[0], arguments[i])) {",
							"            return false;",
							"        }",
							"    }",
							"",
							"    return true;",
							"}",
							"",
							"var expected = JSON.parse(postman.getGlobalVariable(\"expected_response\"));",
							"var got = JSON.parse(responseBody);",
							"tests[\"Response correct\"] = deepCompare(expected, got);",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"postman.setGlobalVariable(\"expected_response\", \"{   \\\"id\\\": \\\"1235432152\\\",   \\\"imp\\\": [     {       \\\"id\\\": \\\"33\\\",       \\\"adm\\\": \\\"<a href=\\\\\\\"http://my.mobfox.com/rtb.click.php?rid=43b43b1afdde970da033d1898731ed3b&price=${AUCTION_PRICE}\\\\\\\" target=\\\\\\\"_self\\\\\\\"><img src=\\\\\\\"http://creative2cdn.mobfox.com/a09b229bcc7395f24e1808aa3958e540.gif\\\\\\\" border=\\\\\\\"0\\\\\\\"/></a><img style=\\\\\\\"position:absolute; left: -10000px;\\\\\\\" width=\\\\\\\"1\\\\\\\" height=\\\\\\\"1\\\\\\\" src=\\\\\\\"http://my.mobfox.com/rtb.impression.pixel.php?rid=43b43b1afdde970da033d1898731ed3b&price=${AUCTION_PRICE}\\\\\\\"/>\\\",       \\\"type\\\": 1     }   ] }\");"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"1235432152\",\n    \"imp\": [\n        {\n            \"id\": \"33\",\n            \"banner\": {}\n        }\n    ],\n    \"site\": {\n        \"id\": 1\n    }\n}"
				},
				"description": ""
			},
			"response": []
		}
	]
}
