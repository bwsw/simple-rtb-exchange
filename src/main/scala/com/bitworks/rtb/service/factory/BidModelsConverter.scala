package com.bitworks.rtb.service.factory

import com.bitworks.rtb.model.http.ContentTypeModel
import com.bitworks.rtb.model.request.BidRequest
import com.bitworks.rtb.model.response.BidResponse
import com.bitworks.rtb.service.DataValidationException
import com.bitworks.rtb.service.parser.BidResponseParser
import com.bitworks.rtb.service.writer.BidRequestWriter

/**
  * Converter for bid models.
  *
  * @author Egor Ilchenko
  */
trait BidModelsConverter {

  /**
    * Returns parsed [[com.bitworks.rtb.model.response.BidResponse BidResponse]] object.
    *
    * @param bytes input bytes
    * @param ct    [[com.bitworks.rtb.model.http.ContentTypeModel ContentTypeModel]]
    */
  def parse(bytes: Array[Byte], ct: ContentTypeModel): BidResponse

  /**
    * Returns generated byte array.
    *
    * @param request [[com.bitworks.rtb.model.request.BidRequest BidRequest]]
    * @param ct      [[com.bitworks.rtb.model.http.ContentTypeModel ContentTypeModel]]
    */
  def write(request: BidRequest, ct: ContentTypeModel): Array[Byte]
}

/**
  * Facade for writers implementation.
  *
  * @author Egor Ilchenko
  */
class BidModelsConverterImpl(
    bidResponseBindings: Map[ContentTypeModel, BidResponseParser],
    bidRequestBindings: Map[ContentTypeModel, BidRequestWriter]) extends BidModelsConverter {
  /**
    * Returns parsed [[com.bitworks.rtb.model.response.BidResponse BidResponse]] object.
    *
    * @param bytes input bytes
    * @param ct    [[com.bitworks.rtb.model.http.ContentTypeModel ContentTypeModel]]
    */
  override def parse(bytes: Array[Byte], ct: ContentTypeModel) = {
    bidResponseBindings.get(ct) match {
      case Some(parser) => parser.parse(bytes)
      case None => throw new DataValidationException(s"cannot find bid response parser for $ct")
    }
  }

  /**
    * Returns generated byte array.
    *
    * @param request [[com.bitworks.rtb.model.request.BidRequest BidRequest]]
    * @param ct      [[com.bitworks.rtb.model.http.ContentTypeModel ContentTypeModel]]
    */
  override def write(request: BidRequest, ct: ContentTypeModel) = {
    bidRequestBindings.get(ct) match {
      case Some(writer) => writer.write(request)
      case None => throw new DataValidationException(s"cannot find bid request writer for $ct")
    }
  }
}

